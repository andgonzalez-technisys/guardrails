prompts:

  - task: summarize_text
    models:
      - openai/gpt-3.5-turbo
    content: |-
      Text: {{ user_input }}
      Please summarize the above text.

  - task: extract_date
    models:
      - openai/gpt-3.5-turbo
      - openai/gpt-4
    content: |-
      Given the user input: "{{ user_input }}", extract any valid dates and normalize them to the format mm-dd-yyyy.
      Handle different date formats, such as "Nov 1st 2023" or "2023-12-02", and always return the date in mm-dd-yyyy format.
      If the year is not provided, assume the year is 2024.
      If the input does not contain a clear date, return "unknown".
      Only return the extracted date in the format mm-dd-yyyy without any additional text.


  - task: extract_account
    models:
      - openai/gpt-3.5-turbo
      - openai/gpt-4
    content: |-
      Given the user input: "{{ user_input }}", extract any account numbers in the format of 12 consecutive digits (e.g., 123456789012).
      If the input does not contain a valid account number, only respond with "unknown". Only return the extracted account number without any additional text.

       **Note:**
      - Dont use the same examples as the response extraction task.

      Examples:

      - Input: My account number is 123456789012
      Output: 123456789012
      - Input: The account to transfer to is 987654321098
      Output: 987654321098
      - Input: Here is the account number: 112233445566
      Output: 112233445566
      - Input: Invalid text with no account number
      Output: unknown
      - Input: i dont have the account now
      Output: unknown
      - Input: The account is 999178081785
      Output: 999178081785

  - task: extract_origin_account
    models:
      - openai/gpt-4
    content: |-
      Given the user input: "{{ user_input }}", extract the origin account number.
      Only return the extracted origin account number without any additional text.
      When there is no origin account number specified in the given user input return "unknown".

      **Examples:**
      - "I want to transfer money from account $account" -> $account
      - "Transfer from my account $account to another account" -> $account
      - "I want to transfer $100 to account number $account1 from account number $account2" -> $account2
      - "Send $200 out of account number $account" -> $account
      - "Move $1000 from account number $account" -> $account



  - task: extract_destination_account
    models:
      - openai/gpt-4
    content: |-
      Given the user input: "{{ user_input }}", extract the destination account number.
      Only return the extracted destination account number without any additional text.
      When there is no destination account number specified in the given user input return "unknown".

      **Examples:**
      - "I want to transfer money to account $account" ->  $account
      - "I want to transfer $100 to account number $account1 from account number $account2" -> $account1
      - "Transfer $500 to my account $account" -> $account
      - "Deposit $200 into account number $account" -> $account
      - "Send $1000 to account number $account" -> $account


  - task: extract_transfer_details
    models:
      - openai/gpt-3.5-turbo
      - openai/gpt-4
    content: |-
      Given the user input: "{{ user_input }}", extract the origin account number, the destination account number, and the amount.
      - The origin account number should be identified with phrases like "from account", "from my account", "from account number", "out of account", "transfer from account", "send from account", or "move from account".
      - The destination account number should be identified with phrases like "to account", "to my account", "to account number", "into account", "deposit to account", "send to account", or "move to account".
      - The amount should be identified by numbers prefixed or suffixed with symbols like $, USD, or words like "dollars".
      If the input does not contain a valid origin account number, destination account number, or amount, respond with "unknown" for the missing value.
      Only return the extracted details in the following order separated by pipes: origin account number|destination account number|amount.
      Do not include any labels or additional text. Use the following examples as reference:

      Examples (do not use these exact texts in your response):
      - Input: I want to transfer $100 to account number 345678901234 from account number 456789012345
        Output: 456789012345|345678901234|100
      - Input: I want to send $100 from account number 456789012345 to account number 345678901234
        Output: 456789012345|345678901234|100
      - Input: Can you help me move $100 to account number 345678901234 from account number 456789012345?
        Output: 456789012345|345678901234|100
      - Input: I'd like to deposit $100 to account number 345678901234 from account number 456789012345
        Output: 456789012345|345678901234|100
      - Input: I want to transfer 50 dollars from my account 567890123456 to account 678901234567
        Output: 567890123456|678901234567|50
      - Input: Transfer $200 from 678901234567 to 789012345678
        Output: 678901234567|789012345678|200
      - Input: Move funds from account 678901234567 to account 789012345678
        Output: 678901234567|789012345678|unknown
      - Input: Send $50 to 890123456789
        Output: unknown|890123456789|50
      - Input: From 901234567890, transfer to 012345678901
        Output: 901234567890|012345678901|unknown
      - Input: Transfer $500
        Output: unknown|unknown|500
      - Input: Please send $125.30 to 234567890123 from account 345678901234
        Output: 345678901234|234567890123|125.30
      - Input: I want to transfer money from my account 456789012345
        Output: 456789012345|unknown|unknown
      - Input: I want to transfer money to account 567890123456
        Output: unknown|567890123456|unknown
      - Input: I want to transfer 50
        Output: unknown|unknown|50
      - Input: Transfer $100
        Output: unknown|unknown|100
      - Input: I want to transfer
        Output: unknown|unknown|unknown








  - task: extract_amount
    models:
      - openai/gpt-4
    content: |-
      Given the user input: "{{ user_input }}", extract a single amount in a valid numerical format, including integers and decimals.
      Handle cases where the amount might be prefixed or suffixed with symbols like $, USD, or words like "dollars".
      If the input does not contain a valid amount format, only respond with "unknown".
      Only return the single extracted numerical value without any additional text or additional values.

      Examples:
      - Input: I want to transfer $100
        Output: 100
      - Input: I want to transfer 100 dollars
        Output: 100
      - Input: I want to transfer 100.50
        Output: 100.50
      - Input: I want to transfer money
        Output: unknown
      - Input: Please send 75.25 USD to my account
        Output: 75.25
      - Input: Transfer fifty dollars
        Output: unknown
      - Input: Send $30
        Output: 30


  - task: extract_confirm
    models:
      - openai/gpt-3.5-turbo
      - openai/gpt-4
    content: |-
      Given the user input: "{{ user_input }}", determine if the response is a confirmation, a negative response, or unknown.
      If the input is a confirmation (e.g., "yes", "Yes", "y", "Y", "confirm", "Confirm", "sure", "Sure", "okay", "Okay", "alright", "Alright", "yes, I sure"), respond with "yes".
      If the input is a negative response (e.g., "no", "No", "n", "N", "not sure", "Not sure", "don't think so", "Don't think so"), respond with "no".
      If the input is uncertain or cannot be determined, respond with "unknown".
      Only return the extracted confirmation without any additional text. Examples: yes, no, unknown.

      Examples:
      - Input: Yes, I sure
        Output: yes
      - Input: No, I don't think so
        Output: no
      - Input: Maybe, I am not sure
        Output: unknown
      - Input: Okay, let's do it
        Output: yes
      - Input: Not really
        Output: no
      - Input: Sure, go ahead
        Output: yes
      - Input: I don't know
        Output: unknown
      - Input: Confirm the transfer
        Output: yes
      - Input: Nope, I am not sure
        Output: no
      - Input: Alright, let's proceed
        Output: yes

  - task: generate_user_intent
    models:
      - openai/gpt-3.5-turbo
      - openai/gpt-4
    messages:
      - type: system
        content: "{{ general_instructions }}"
      - type: system
        content: "This is how a conversation between a user and the bot can go:"
      - type: user
        content: "{{ sample_conversation | last_turns(8) | to_messages }}"
      - type: bot
        content: "Based on our last conversation, your concern was:"
      - type: user
        content: "{{ history | colang | last_user_message | last_turns(20) | to_messages }}"




  - task: generate_next_steps
    models:
      - openai/gpt-3.5-turbo
      - openai/gpt-4
    messages:
      - type: system
        content: "Considering our discussion, the next steps could be:"
      - type: bot
        content: "{{ history | colang | last_turns(20) | to_messages }}"



  - task: generate_bot_message
    models:
      - openai/gpt-3.5-turbo
      - openai/gpt-4
    messages:
      - type: system
        content: "{{ general_instructions }}"

      - type: system
        content: "This is how a conversation between a user and the bot can go:"

      - "{{ sample_conversation | to_messages }}"

      - type: system
        content: |-
          {% if relevant_chunks %}
          # This is some additional context:
          ```markdown
          {{ relevant_chunks }}
          ```
          {% endif %}"

      - type: system
        content: "This is how the bot talks:"

      - "{{ examples | to_messages}}"

      - type: system
        content: "This is the current conversation between the user and the bot:"

      - "{{ sample_conversation | first_turns(2) | to_messages }}"
      - "{{ history | colang | to_messages }}"

    output_parser: "bot_message"


  - task: generate_value
    models:
      - openai/gpt-3.5-turbo
      - openai/gpt-4
    messages:
      - type: system
        content: "Based on your inputs, here are the values we calculated:"
      - type: assistant
        content: "{{ history | colang | last_turns(5) | to_calculations }}"
